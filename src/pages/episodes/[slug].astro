---
import { getCollection, type CollectionEntry } from 'astro:content';
import Layout from '../../components/Layout.astro';
import VideoEmbed from '../../components/VideoEmbed.astro';

export async function getStaticPaths() {
  const episodes = await getCollection('episodes');
  return episodes.map((episode) => ({
    params: { slug: episode.slug },
    props: { episode },
  }));
}

type Props = {
  episode: CollectionEntry<'episodes'>;
};

const { episode } = Astro.props as Props;
const { Content } = await episode.render();

// Get related recipes
const recipes = await getCollection('recipes');
const relatedRecipes = recipes.filter(recipe => 
  episode.data.relatedRecipes.includes(recipe.slug)
);
---

<Layout title={episode.data.title} description={episode.data.description}>
  <article class="max-w-5xl mx-auto px-4 py-8">
    <header class="mb-8">
      <div class="mb-4">
        <a href="/episodes" class="text-primary hover:text-accent font-medium">
          ‚Üê Back to Episodes
        </a>
      </div>
      
      <div class="flex items-center gap-4 mb-4">
        <span class="bg-primary text-text-dark px-3 py-1 rounded-full text-sm font-medium">
          Episode {episode.data.episodeNumber}
        </span>
        <time class="text-muted">
          {episode.data.publishDate.toLocaleDateString()}
        </time>
      </div>
      
      <h1 class="text-4xl md:text-5xl font-bold text-text-light mb-4">
        {episode.data.title}
      </h1>
      
      <p class="text-xl text-text-light/80 mb-8">
        {episode.data.description}
      </p>
      
      <div class="mb-8">
        <VideoEmbed videoId={episode.data.youtubeId} title={episode.data.title} />
      </div>
    </header>

    <div class="prose prose-lg max-w-none mb-12 prose-invert prose-headings:text-text-light prose-p:text-text-light prose-strong:text-text-light prose-li:text-text-light prose-h2:text-primary prose-h3:text-accent">
      <Content />
    </div>

    <!-- Related Recipes -->
    {relatedRecipes.length > 0 && (
      <section class="border-t border-border pt-8">
        <h2 class="text-2xl font-bold text-text-light mb-6">
          Recipes from this Episode
        </h2>
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {relatedRecipes.map((recipe) => (
            <div class="bg-surface border border-border rounded-lg p-6 hover:shadow-md transition-shadow">
              <h3 class="font-bold text-lg mb-2">
                <a href={`/recipes/${recipe.slug}`} class="text-text-light hover:text-primary">
                  {recipe.data.title}
                </a>
              </h3>
              <p class="text-text-light/70 text-sm mb-4">{recipe.data.description}</p>
              <div class="flex justify-between items-center text-sm text-muted">
                <span class="bg-primary text-text-dark px-2 py-1 rounded capitalize">
                  {recipe.data.mealType}
                </span>
                <span>{recipe.data.cookTime} min</span>
              </div>
            </div>
          ))}
        </div>
      </section>
    )}
  </article>
</Layout>
